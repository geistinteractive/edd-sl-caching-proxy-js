{"version":3,"file":"edd-sl-caching-proxy-js.umd.js","sources":["../src/edd-sl-caching-proxy-js.ts"],"sourcesContent":["import axios, { AxiosResponse, AxiosPromise } from \"axios\";\n\nexport default class EDDSL {\n  private proxyURL: string;\n\n  /**\n   * \n   * @param proxyURL the url to the proxy server\n   */\n  constructor(proxyURL: string) {\n    this.proxyURL = proxyURL;\n  }\n  /**\n   * checks a license to see if it is still valid\n   * \n   * async and cached\n   * \n   * @param license the EDD License\n   * @param itemId  the item ID that the license belongs too\n   * @param activationId a string representing a unique install or device. EDD uses url\n   */\n  async licenseCheck(\n    license: string,\n    itemId: string,\n    activationId: string\n  ): Promise<AxiosResponse> {\n    return this.licenseRequest(license, itemId, activationId, \"check\");\n  }\n\n  /**\n   * activate a license\n   * \n   * async\n   * \n   * @param license edd license\n   * @param itemId the itemId of the license to activate\n   * @param activationId a string that uniqiely IDs the device\n   */\n  async licenseActivate(\n    license: string,\n    itemId: string,\n    activationId: string\n  ): Promise<AxiosResponse> {\n    return this.licenseRequest(license, itemId, activationId, \"activate\");\n  }\n\n  /**\n   * deactivate a license\n   * \n   * async\n   * \n   * @param license edd license\n   * @param itemId the itemId of the license to deactivate\n   * @param activationId a string that uniqiely IDs the device\n   */\n  async licenseDeactivate(\n    license: string,\n    itemId: string,\n    activationId: string\n  ): Promise<AxiosResponse> {\n    return this.licenseRequest(license, itemId, activationId, \"deactivate\");\n  }\n\n  /**\n   * gets the user licenses.  Needs the firebase idToken  \n   *\n   * @param email customer email address\n   * @param idToken the firebase Id token\n   * @param productName the name of the product (optional)\n   */\n  async userLicenses(\n    email: string,\n    idToken: string,\n    productName: string = \"\"\n  ): Promise<Array<Object>> {\n    const query = {\n      productName: productName ? productName : \"\",\n      email,\n      idToken\n    };\n\n    const opts = {\n      method: \"GET\",\n      url: `${this.proxyURL}/user/licenses`,\n      params: query,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const result = await axios(opts);\n    return result.data;\n  }\n\n  /**\n   * login to EDD/Wordpress But firebase token\n   * @param username the username or email address for the wordpress account\n   * @param password the password\n   */\n  async loginForFirebase(\n    username: string,\n    password: string\n  ): Promise<AxiosResponse> {\n    const opts = {\n      method: \"POST\",\n      url: `${this.proxyURL}/wp/loginForFirebase`,\n      headers: { \"Content-Type\": \"application/json\" },\n      data: {\n        username,\n        password\n      }\n    };\n    const result = await axios(opts);\n    return result.data;\n  }\n\n  /**\n   * login to EDD/Wordpress\n   * @param username the username or email address for the wordpress account\n   * @param password the password\n   */\n  async login(username: string, password: string): Promise<AxiosResponse> {\n    const opts = {\n      method: \"POST\",\n      url: `${this.proxyURL}/wp/login`,\n      headers: { \"Content-Type\": \"application/json\" },\n      data: {\n        username,\n        password\n      }\n    };\n    const result = await axios(opts);\n    const data = result.data;\n    const userData: any = Object.assign({}, data);\n\n    delete userData.token;\n    this.storeUserData(data);\n    return userData;\n  }\n  /**\n   * gets the user data from storage\n   * \n   * not async\n   */\n  user() {\n    const userData = this.getUserDataFromStorage();\n    if (userData) {\n      delete userData.token;\n      return userData;\n    }\n    return null;\n  }\n\n  /**\n   * log the currently logged in user out\n   * \n   * removes token and user data, but does not revoke the token\n   */\n  logout() {\n    this.deleteStoredUserData();\n    return true;\n  }\n\n  /**\n   * is the user logged in or not\n   * \n   * async\n   * \n   * @returns {boolean} if the user is logged in\n   */\n  async isLoggedIn(): Promise<boolean> {\n    const userData = this.getUserDataFromStorage();\n    let token;\n    if (userData) {\n      token = userData.token;\n    } else {\n      token = \"\"; // maybe a better way to do this ??\n    }\n\n    const opts = {\n      method: \"POST\",\n      url: `${this.proxyURL}/wp/validate`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + token\n      }\n    };\n\n    try {\n      const result = await axios(opts);\n      const data = result.data;\n      const valid = data.code === \"jwt_auth_valid_token\";\n\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * \n   * @param license the license to work with\n   * @param itemId the item id for the product\n   * @param activationId the unique id for this activation\n   * @param action what action to take\n   */\n  private async licenseRequest(\n    license: string,\n    itemId: string,\n    activationId: string,\n    action: string\n  ) {\n    const opts = {\n      method: \"get\",\n      url: `${this.proxyURL}/license/${license}/${action}`,\n      params: {\n        itemId,\n        activationId\n      }\n    };\n\n    const r = await axios(opts);\n    return r.data;\n  }\n\n  private getUserDataFromStorage(): any {\n    const s = localStorage.getItem(\"wp-user-data\");\n    if (!s) return null;\n    const userData = JSON.parse(s);\n    return userData;\n  }\n\n  private deleteStoredUserData() {\n    localStorage.removeItem(\"wp-user-data\");\n  }\n\n  private storeUserData(data: object) {\n    const json = JSON.stringify(data);\n    localStorage.setItem(\"wp-user-data\", json);\n  }\n\n  private getStoredToken(): string {\n    const userData = this.getUserDataFromStorage();\n    let token;\n    if (userData) {\n      token = userData.token;\n    } else {\n      token = \"\";\n    }\n    return token;\n  }\n}\n"],"names":[],"mappings":"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"}